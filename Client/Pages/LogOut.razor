@page "/auth/logout"
@using global::Shared.Requests.Auth
@inject NavigationManager NavigationManager

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationState is not null)
        {
            var user = (await AuthenticationState).User;
            var logOutSuccess = await Facade.LogOutUser(
                new LogOutRequest { Email = user.Claims.First(claim => claim.Type == "Email").Value }
                );
            if (logOutSuccess)
            {
                ToastService.ShowToast("You've been logged out.", ToastLevel.Info);
                NavigationManager.NavigateTo("/auth/login");
            }
        }
    }
}