@page "/auth/register"
@using global::Shared.DTO
@using global::Shared.Requests.Auth
@inject IAuthControllerClient AuthControllerClient
@inject NavigationManager NavigationManager
<h3>Register</h3>
<div>
    <EditForm Model="@_registerDto" OnSubmit="Submit">
         <p>
            Псеводним:<br/>
            <InputText @bind-Value="_registerDto.Username"/>
        </p>
        <p>
            Имя:<br/>
            <InputText @bind-Value="_registerDto.Name"/>
        </p>
        <p>
            Фамилия:<br/>
            <InputText @bind-Value="_registerDto.Surname"/>
        </p>
        <p>
            Отчество (если есть):<br/>
            <InputText @bind-Value="_registerDto.Patronymic"/>
        </p>
        <p>
            Почта :<br/>
            <InputText type="email" @bind-Value="_registerDto.Email"/>
        </p>
        <p>
            Пароль:<br/>
            <InputText type="password" @bind-Value="_registerDto.Password"/>
        </p>

        <button type="submit">Зарегистрироваться</button>
        @if (_errorMessage.Length > 0)
        {
            <span>@_errorMessage</span>
        }
    </EditForm>
</div>
@code {
    private string _errorMessage = "";
    private RegisterModel _registerDto = new();

    private async Task Submit()
    {
        var response = await Facade.CreateUser(new CreateUserRequest { RegisterModel = _registerDto });

        _errorMessage = "";
        foreach (var error in response.Errors)
        {
            _errorMessage += error;
        }

        if (response.IsSucceeded)
        {
            NavigationManager.NavigateTo("/auth/login");
        }
    }
}